
public class WeightedQuickUnionUF {
	private int[] arr;
	public WeightedQuickUnionUF(int N){
		arr=new int[N];
		for(int i=0;i<N;i++){
			arr[i]=i;//arr[i]: parent of object i
		}
	}
	
	private int ancestor(int i){
		while(i!=arr[i]){
			i=arr[i];
		}
		return i;
	}
	
	//1: find
	public boolean isConnected(int p,int q){
		return ancestor(p)==ancestor(q);
	}
	
	//2: union
	public void union(int p,int q){
		int i=ancestor(p);
		int j=ancestor(q);
		arr[i]=j;
	}
}
