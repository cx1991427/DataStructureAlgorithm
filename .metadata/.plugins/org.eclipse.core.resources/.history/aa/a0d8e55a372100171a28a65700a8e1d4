
public class GenericBST<T extends Comparable<? super T>> {
	//1: inner class:
	public static class TreeNode<T>{
		T val;
		TreeNode<T> left,right;
		
		public TreeNode(T val){
			this.val=val;
		}		
	}
	
	//2:attribute:
	public TreeNode<T> root;
	
	//3:constructor:
	public GenericBST(T val){
		root=new TreeNode<>(val);
	}
	
	//4:Common Method:
	
	
	//5:contains:
	public boolean contains(T val){
		return contains(val,root);
	}
	private boolean contains(T val,TreeNode<T> root){
		return true;
	}
	
	
	//6:findMin:
	
	//7:findMax:
	
	//8:insert:
	
	//9:remove
}
